/* Goo Engine terrainpack 
 * Copyright 2014 Goo Technologies AB
 */
(function(window){function f(){
define("goo/addons/terrainpack/TerrainSurface",["goo/renderer/MeshData","goo/math/MathUtils"],function(e,t){function n(t,n,r,i){var s=[];for(var o=0;o<t.length;o++)for(var u=0;u<t[o].length;u++)s.push(o*n/(t.length-1),t[o][u]*r,u*i/(t.length-1));this.verts=s,this.vertsPerLine=t[0].length;var a=e.defaultMap([e.POSITION,e.NORMAL,e.TEXCOORD0]),f=this.verts.length/3,l=f/this.vertsPerLine;e.call(this,a,f,(l-1)*(this.vertsPerLine-1)*6),this.rebuild()}return n.prototype=Object.create(e.prototype),n.prototype.rebuild=function(){this.getAttributeBuffer(e.POSITION).set(this.verts);var n=[],r=[],i=[],s=this.verts.length/3,o=s/this.vertsPerLine;for(var u=0;u<o-1;u++){for(var a=0;a<this.vertsPerLine-1;a++){var f=(u+0)*this.vertsPerLine+(a+0),l=(u+1)*this.vertsPerLine+(a+0),c=(u+1)*this.vertsPerLine+(a+1),h=(u+0)*this.vertsPerLine+(a+1);n.push(l,f,h,l,h,c),i=t.getTriangleNormal(this.verts[f*3+0],this.verts[f*3+1],this.verts[f*3+2],this.verts[h*3+0],this.verts[h*3+1],this.verts[h*3+2],this.verts[l*3+0],this.verts[l*3+1],this.verts[l*3+2]),r.push(i[0],i[1],i[2])}r.push(i[0],i[1],i[2])}u--;for(var a=0;a<this.vertsPerLine-1;a++){var f=(u+0)*this.vertsPerLine+(a+0),l=(u+1)*this.vertsPerLine+(a+0),h=(u+0)*this.vertsPerLine+(a+1);i=t.getTriangleNormal(this.verts[f*3+0],this.verts[f*3+1],this.verts[f*3+2],this.verts[h*3+0],this.verts[h*3+1],this.verts[h*3+2],this.verts[l*3+0],this.verts[l*3+1],this.verts[l*3+2]),r.push(i[0],i[1],i[2])}r.push(i[0],i[1],i[2]),this.getAttributeBuffer(e.NORMAL).set(r),this.getIndexBuffer().set(n);var p=[],d=this.verts[this.verts.length-3],v=this.verts[this.verts.length-1];for(var u=0;u<this.verts.length;u+=3){var m=this.verts[u+0]/d,g=this.verts[u+2]/v;p.push(m,g)}return this.getAttributeBuffer(e.TEXCOORD0).set(p),this},n}),define("goo/addons/terrainpack/Forrest",["goo/renderer/Material","goo/renderer/Camera","goo/math/Vector3","goo/math/Transform","goo/renderer/TextureCreator","goo/renderer/Texture","goo/renderer/MeshData","goo/renderer/Shader","goo/renderer/light/DirectionalLight","goo/util/CanvasUtils","goo/util/Ajax","goo/util/MeshBuilder","goo/noise/Noise","goo/noise/ValueNoise","goo/addons/terrainpack/TerrainSurface","goo/loaders/DynamicLoader","goo/entities/EntityUtils","goo/util/combine/EntityCombiner","goo/util/TangentGenerator","goo/entities/components/MeshDataComponent","goo/entities/components/ScriptComponent","goo/renderer/shaders/ShaderBuilder","goo/math/MathUtils","goo/util/rsvp"],function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x){function T(){this.calcVec=new n,this.initDone=!1}var N=function(e,t,n){var r=new v({world:e,preloadBinaries:!0,rootPath:"res/trees2"});return t.then(function(){return console.log("loading bundle ",n),r.load("root.bundle")}).then(function(e){for(var t in e)console.log(t);console.error("Config in bundle ",n," contained no scene?!")})};T.prototype.init=function(e,t,n,r,i,s){var o=new x.Promise,u=["fish"];for(var a=0;a<u.length;a++)o=N(e,o,u[a]);return o.then(function(){console.log("loaded forrest",i)},function(e){console.log("Error! ",e)}).then(null,function(e){console.log("Error! ",e)}),this.loadLODTrees(e,t,n,r,i,s)},T.prototype.loadLODTrees=function(t,n,r,i,s,o){this.terrainQuery=n,this.forrestTypes=s,this.entityMap=o||{},this.world=t,this.vegetationList={};for(var u in s){var a=s[u],f=this.createBase(a);this.vegetationList[u]=f}var l=new e(k,"vegetation");l.setTexture("DIFFUSE_MAP",r),l.setTexture("NORMAL_MAP",i),l.uniforms.discardThreshold=.6,l.uniforms.materialAmbient=[0,0,0,0],l.uniforms.materialDiffuse=[1,1,1,1],l.uniforms.materialSpecular=[0,0,0,0],l.renderQueue=2001,this.material=l,this.patchSize=32,this.patchDensity=5,this.gridSize=7,this.minDist=1.5,this.patchSpacing=this.patchSize/this.patchDensity,this.gridSizeHalf=Math.floor(this.gridSize*.5),this.grid=[],this.gridState=[];var c=this.createForrestPatch(0,0,1);for(var h=0;h<this.gridSize;h++){this.grid[h]=[],this.gridState[h]=[];for(var p=0;p<this.gridSize;p++){var d=t.createEntity(this.material),v=new b(c);v.modelBound.xExtent=this.patchSize,v.modelBound.yExtent=500,v.modelBound.zExtent=this.patchSize,v.autoCompute=!1,d.set(v),d.addToWorld(),this.grid[h][p]=d,this.gridState[h][p]={lod:-1,x:-1,z:-1},d.meshRendererComponent.hidden=!0}}this.currentX=-1e4,this.currentZ=-1e4,this.initDone=!0},T.prototype.rebuild=function(){this.currentX=-1e4,this.currentZ=-1e4};var C=!1;T.prototype.toggle=function(){C=!C;for(var e=0;e<this.gridSize;e++)for(var t=0;t<this.gridSize;t++){var n=this.grid[e][t];n.skip=C}C||this.rebuild()},T.prototype.update=function(e,t){if(!this.initDone||C)return;var n=Math.floor(e/this.patchSize),r=Math.floor(t/this.patchSize);if(this.currentX===n&&this.currentZ===r)return;for(var e=0;e<this.gridSize;e++)for(var t=0;t<this.gridSize;t++){var i=n+e,s=r+t;i-=this.gridSizeHalf,s-=this.gridSizeHalf;var o=S.moduloPositive(i,this.gridSize),u=S.moduloPositive(s,this.gridSize),a=this.grid[o][u],f=this.gridState[o][u],l=Math.abs(e-this.gridSizeHalf),c=Math.abs(t-this.gridSizeHalf),h=1;l<this.minDist&c<this.minDist&&(h=2);if(f.lod===h&&f.x===i&&f.z===s)continue;f.lod=h,f.x=i,f.z=s,i*=this.patchSize,s*=this.patchSize;var p=this.createForrestPatch(i,s,h,a);p&&p.vertexCount>0?(a.meshDataComponent.meshData=p,a.meshRendererComponent.hidden=!1):a.meshRendererComponent.hidden=!0,a.meshRendererComponent.worldBound.center.setd(i+this.patchSize*.5,0,s+this.patchSize*.5)}this.currentX=n,this.currentZ=r},T.prototype.determineVegTypeAtPos=function(e){var t=this.terrainQuery.getNormalAt(e);t===null&&(t=n.UNIT_Y);var r=t.dot(n.UNIT_Y);return this.terrainQuery.getForrestType(e[0],e[2],r,S.fastRandom())},T.prototype.fetchTreeMesh=function(e){return m.clone(this.world,this.entityMap[e])},T.prototype.fetchTreeBillboard=function(e,t){var n=this.vegetationList[e],r=this.forrestTypes[e],i=r.w*t,s=r.h*t;return n.getAttributeBuffer("OFFSET").set([-i*.5,0,-i*.5,s,i*.5,s,i*.5,0]),n},T.prototype.getPointInPatch=function(e,t,n,r,i){var s=[0,0,0];return s[0]=n+(e+S.fastRandom()*.75)*i,s[2]=.5+r+(t+S.fastRandom()*.75)*i,s[1]=this.terrainQuery.getHeightAt(s),s[1]===null&&(s[1]=0),s},T.prototype.addVegMeshToPatch=function(e,t,n,i,s){var o=new r,u=S.fastRandom()*.5+.75;o.translation.set(t),o.update();var a=s&&(i===2||this.forrestTypes[e].forbidden===!0);if(a&&this.entityMap[e]){var f=this.fetchTreeMesh(e);f.transformComponent.transform.scale.mul(u),f.transformComponent.transform.translation.set(t),f.addToWorld(),s.attachChild(f),this.onAddedVegMesh&&this.onAddedVegMesh(e,f,t,u)}else{var l=this.fetchTreeBillboard(e,u);n.addMeshData(l,o)}},T.prototype.createForrestPatch=function(e,t,n,r){var i=new c,s=this.patchDensity,o=this.patchSpacing;r&&r.traverse(function(e,t){t>0&&e.removeFromWorld()}),S.randomSeed=e*1e4+t;for(var u=0;u<s;u++)for(var a=0;a<s;a++){var f=this.getPointInPatch(u,a,e,t,o),l=this.determineVegTypeAtPos(f);l&&this.addVegMeshToPatch(l,f,i,n,r)}var h=i.build();return n===2&&(new g(this.world,1,!0,!0))._combineList(r),h[0]},T.prototype.createBase=function(e){var t=o.defaultMap([o.POSITION,o.TEXCOORD0]);t.BASE=o.createAttribute(1,"Float"),t.OFFSET=o.createAttribute(2,"Float");var n=new o(t,4,6);return n.getAttributeBuffer(o.POSITION).set([0,-e.h*.1,0,0,-e.h*.1,0,0,-e.h*.1,0,0,-e.h*.1,0]),n.getAttributeBuffer(o.TEXCOORD0).set([e.tx,e.ty,e.tx,e.ty+e.th,e.tx+e.tw,e.ty+e.th,e.tx+e.tw,e.ty]),n.getAttributeBuffer("BASE").set([0,e.h,e.h,0]),n.getAttributeBuffer("OFFSET").set([-e.w*.5,0,-e.w*.5,e.h,e.w*.5,e.h,e.w*.5,0]),n.getIndexBuffer().set([0,3,1,1,3,2]),n};var k={processors:[E.light.processor,function(e){E.USE_FOG?(e.defines.FOG=!0,e.uniforms.fogSettings=E.FOG_SETTINGS,e.uniforms.fogColor=E.FOG_COLOR):delete e.defines.FOG}],attributes:{vertexPosition:o.POSITION,vertexUV0:o.TEXCOORD0,base:"BASE",offset:"OFFSET"},uniforms:{viewProjectionMatrix:u.VIEW_PROJECTION_MATRIX,cameraPosition:u.CAMERA,diffuseMap:u.DIFFUSE_MAP,normalMap:u.NORMAL_MAP,discardThreshold:-0.01,fogSettings:function(){return E.FOG_SETTINGS},fogColor:function(){return E.FOG_COLOR},time:u.TIME},builder:function(e,t){E.light.builder(e,t)},vshader:function(){return["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","attribute float base;","attribute vec2 offset;","uniform mat4 viewProjectionMatrix;","uniform vec3 cameraPosition;","uniform float time;",E.light.prevertex,"varying vec3 normal;","varying vec3 binormal;","varying vec3 tangent;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec2 texCoord0;","void main(void) {","vec3 swayPos = vertexPosition;","vec3 nn = cameraPosition - swayPos.xyz;","nn.y = 0.0;","normal = normalize(nn);","tangent = cross(vec3(0.0, 1.0, 0.0), normal);","binormal = cross(normal, tangent);","swayPos.xz += tangent.xz * offset.x;","swayPos.y += offset.y;","swayPos.x += sin(time * 0.5 + swayPos.x * 0.4) * base * sin(time * 1.5 + swayPos.y * 0.4) * 0.02 + 0.01;","	vec4 worldPos = vec4(swayPos, 1.0);","	vWorldPos = worldPos.xyz;","	gl_Position = viewProjectionMatrix * worldPos;",E.light.vertex,"	texCoord0 = vertexUV0;","	viewPosition = cameraPosition - worldPos.xyz;","}"].join("\n")},fshader:function(){return["uniform sampler2D diffuseMap;","uniform sampler2D normalMap;","uniform float discardThreshold;","uniform vec2 fogSettings;","uniform vec3 fogColor;",E.light.prefragment,"varying vec3 normal;","varying vec3 binormal;","varying vec3 tangent;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec2 texCoord0;","void main(void)","{","	vec4 final_color = texture2D(diffuseMap, texCoord0);","if (final_color.a < discardThreshold) discard;","mat3 tangentToWorld = mat3(tangent, binormal, normal);","vec3 tangentNormal = texture2D(normalMap, texCoord0).xyz * vec3(2.0) - vec3(1.0);","vec3 worldNormal = (tangentToWorld * tangentNormal);","vec3 N = normalize(worldNormal);",E.light.fragment,"#ifdef FOG","float d = pow(smoothstep(fogSettings.x, fogSettings.y, length(viewPosition)), 1.0);","final_color.rgb = mix(final_color.rgb, fogColor, d);","#endif","	gl_FragColor = final_color;","}"].join("\n")}};return T}),define("goo/addons/terrainpack/Terrain",["goo/entities/EntityUtils","goo/entities/components/MeshDataComponent","goo/entities/components/MeshRendererComponent","goo/math/MathUtils","goo/math/Transform","goo/math/Vector3","goo/renderer/MeshData","goo/renderer/Material","goo/renderer/Shader","goo/renderer/shaders/ShaderBuilder","goo/renderer/shaders/ShaderLib","goo/renderer/shaders/ShaderFragment","goo/renderer/TextureCreator","goo/renderer/pass/RenderTarget","goo/renderer/Texture","goo/renderer/Renderer","goo/renderer/pass/FullscreenPass","goo/renderer/pass/FullscreenUtil","goo/renderer/light/DirectionalLight","goo/shapes/Quad"],function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b){function E(e,t,n){this.world=e.world,this.renderer=e.renderer,this.size=t,this.count=n,this.splatMult=2,this._gridCache={};var r=new b(2/t,2/t),s=this.drawMaterial1=new u(T);s.blendState.blending="AdditiveBlending",s.cullState.cullFace="Front";var o=this.drawMaterial2=new u(N);o.cullState.cullFace="Front";var a=this.drawMaterial3=new u(C);a.uniforms.size=1/t,a.cullState.cullFace="Front";var f=this.drawMaterial4=new u(k);f.cullState.cullFace="Front",this.renderable={meshData:r,materials:[s],transform:new i},this.renderable.transform.setRotationXYZ(0,0,Math.PI*.5),this.copyPass=new m(l.screenCopy),this.copyPass.material.depthState.enabled=!1,this.upsamplePass=new m(x),this.upsamplePass.material.depthState.enabled=!1,this.normalmapPass=new m(O),this.normalmapPass.material.depthState.enabled=!1,this.normalmapPass.material.uniforms.resolution=[t,t],this.normalmapPass.material.uniforms.height=10,this.extractFloatPass=new m(L),this.normalMap=new p(t,t),this.textures=[],this.texturesBounce=[];for(var c=0;c<n;c++)this.textures[c]=new p(t,t,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,type:"Float"}),this.texturesBounce[c]=new p(t,t,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,type:"Float"}),t*=.5;a.setTexture("HEIGHT_MAP",this.texturesBounce[0]),f.setTexture("HEIGHT_MAP",this.texturesBounce[0]),this.n=31,this.gridSize=(this.n+1)*4-1,console.log("grid size: ",this.gridSize),this.splat=new p(this.size*this.splatMult,this.size*this.splatMult,{wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1}),this.splatCopy=new p(this.size*this.splatMult,this.size*this.splatMult,{wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1}),o.setTexture("SPLAT_MAP",this.splatCopy)}var w=window.Ammo;E.prototype.init=function(e){var t=this.world,n=this.count,r=this.terrainRoot=t.createEntity("TerrainRoot");r.addToWorld(),this.clipmaps=[];for(var i=0;i<n;i++){var s=Math.pow(2,i),o=new u(S,"clipmap"+i);o.uniforms.materialAmbient=[0,0,0,1],o.uniforms.materialDiffuse=[1,1,1,1],o.cullState.frontFace="CW",o.uniforms.resolution=[1,1/s,this.size,this.size],o.uniforms.resolutionNorm=[this.size,this.size];var a=this.createClipmapLevel(t,o,i);a.setScale(s,1,s),r.attachChild(a);var f=new u(A,"terrainPickingMaterial"+i);f.cullState.frontFace="CW",f.uniforms.resolution=[1,1/s,this.size,this.size],f.blendState={blending:"NoBlending",blendEquation:"AddEquation",blendSrc:"SrcAlphaFactor",blendDst:"OneMinusSrcAlphaFactor"},this.clipmaps[i]={clipmapEntity:a,level:i,size:s,currentX:1e5,currentY:1e5,currentZ:1e5,origMaterial:o,terrainPickingMaterial:f}}var l=this.clipmaps[this.clipmaps.length-1];for(var i=this.clipmaps.length-2;i>=0;i--){var c=this.clipmaps[i];c.parentClipmap=l,l=c}var h=new y;h.shadowSettings.size=10;var p=this.lightEntity=t.createEntity(h);p.setTranslation(200,200,200),p.setRotation(-Math.PI*.5,0,0),p.addToWorld(),this.lightEntity.lightComponent.hidden=!0,this.floatTexture=e.heightMap instanceof d?e.heightMap:new d(e.heightMap,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,format:"Luminance"},this.size,this.size),this.splatTexture=e.splatMap instanceof d?e.splatMap:new d(e.splatMap,{magFilter:"NearestNeighbor",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,flipY:!1},this.size*this.splatMult,this.size*this.splatMult);for(var i=0;i<this.count;i++){var o=this.clipmaps[i].origMaterial,v=this.textures[i];o.setTexture("HEIGHT_MAP",v),o.setTexture("NORMAL_MAP",this.normalMap),o.setTexture("DETAIL_MAP",this.detailMap),o.setTexture("SPLAT_MAP",this.splat),o.setTexture("GROUND_MAP1",e.ground1),o.setTexture("GROUND_MAP2",e.ground2),o.setTexture("GROUND_MAP3",e.ground3),o.setTexture("GROUND_MAP4",e.ground4),o.setTexture("GROUND_MAP5",e.ground5),o.setTexture("STONE_MAP",e.stone);var f=this.clipmaps[i].terrainPickingMaterial;f.setTexture("HEIGHT_MAP",v)}this.copyPass.render(this.renderer,this.textures[0],this.floatTexture),this.copyPass.render(this.renderer,this.splatCopy,this.splatTexture),this.copyPass.render(this.renderer,this.splat,this.splatTexture),this.updateTextures()},E.prototype.toggleMarker=function(){this.lightEntity.lightComponent.hidden=!this.lightEntity.lightComponent.hidden},E.prototype.setMarker=function(e,t,n,r,i,s){this.lightEntity.lightComponent.light.shadowSettings.size=t*.5,s.wrapS="EdgeClamp",s.wrapT="EdgeClamp",this.lightEntity.lightComponent.light.lightCookie=s,this.lightEntity.setTranslation(n,200,r)},E.prototype.pick=function(e,t,n,r){var i=[];this.terrainRoot.traverse(function(e){e.meshDataComponent&&e.meshRendererComponent.hidden===!1&&i.push(e)});for(var s=0;s<this.clipmaps.length;s++){var o=this.clipmaps[s];o.clipmapEntity.traverse(function(e){e.meshRendererComponent&&(e.meshRendererComponent.isPickable=!0,e.meshRendererComponent.materials[0]=o.terrainPickingMaterial)})}this.renderer.renderToPick(i,v.mainCamera,!0,!1,!1,t,n,null,!0);var u={};this.renderer.pick(t,n,u,v.mainCamera),e.getWorldPosition(t,n,this.renderer.viewportWidth,this.renderer.viewportHeight,u.depth,r);for(var s=0;s<this.clipmaps.length;s++){var o=this.clipmaps[s];o.clipmapEntity.traverse(function(e){e.meshRendererComponent&&(e.meshRendererComponent.isPickable=!1,e.meshRendererComponent.materials[0]=o.origMaterial)})}},E.prototype.draw=function(e,t,n,i,s,o,u,f,l){u=r.clamp(u,0,1),i=(i-this.size/2)*2,o=(o-this.size/2)*2,e==="paint"?(this.renderable.materials[0]=this.drawMaterial2,this.renderable.materials[0].uniforms.opacity=u,t==="add"?(this.renderable.materials[0].blendState.blendEquationColor="AddEquation",this.renderable.materials[0].blendState.blendEquationAlpha="AddEquation"):t==="sub"&&(this.renderable.materials[0].blendState.blendEquationColor="ReverseSubtractEquation",this.renderable.materials[0].blendState.blendEquationAlpha="ReverseSubtractEquation"),f?this.renderable.materials[0].setTexture(a.DIFFUSE_MAP,f):this.renderable.materials[0].setTexture(a.DIFFUSE_MAP,this.defaultBrushTexture),this.renderable.transform.translation.setd(i/this.size,o/this.size,0),this.renderable.transform.scale.setd(-n,n,n),this.renderable.transform.update(),this.copyPass.render(this.renderer,this.splatCopy,this.splat),this.renderable.materials[0].uniforms.rgba=l||[1,1,1,1],this.renderer.render(this.renderable,g.camera,[],this.splat,!1)):e==="smooth"?(this.renderable.materials[0]=this.drawMaterial3,this.renderable.materials[0].uniforms.opacity=u,f?this.renderable.materials[0].setTexture(a.DIFFUSE_MAP,f):this.renderable.materials[0].setTexture(a.DIFFUSE_MAP,this.defaultBrushTexture),this.renderable.transform.translation.setd(i/this.size,o/this.size,0),this.renderable.transform.scale.setd(-n,n,n),this.renderable.transform.update(),this.copyPass.render(this.renderer,this.texturesBounce[0],this.textures[0]),this.renderer.render(this.renderable,g.camera,[],this.textures[0],!1)):e==="flatten"?(this.renderable.materials[0]=this.drawMaterial4,this.renderable.materials[0].uniforms.opacity=u,this.renderable.materials[0].uniforms.height=s,f?this.renderable.materials[0].setTexture(a.DIFFUSE_MAP,f):this.renderable.materials[0].setTexture(a.DIFFUSE_MAP,this.defaultBrushTexture),this.renderable.transform.translation.setd(i/this.size,o/this.size,0),this.renderable.transform.scale.setd(-n,n,n),this.renderable.transform.update(),this.copyPass.render(this.renderer,this.texturesBounce[0],this.textures[0]),this.renderer.render(this.renderable,g.camera,[],this.textures[0],!1)):(this.renderable.materials[0]=this.drawMaterial1,this.renderable.materials[0].uniforms.opacity=u,t==="add"?this.renderable.materials[0].blendState.blending="AdditiveBlending":t==="sub"?this.renderable.materials[0].blendState.blending="SubtractiveBlending":t==="mul"&&(this.renderable.materials[0].blendState.blending="MultiplyBlending"),f?this.renderable.materials[0].setTexture(a.DIFFUSE_MAP,f):this.renderable.materials[0].setTexture(a.DIFFUSE_MAP,this.defaultBrushTexture),this.renderable.transform.translation.setd(i/this.size,o/this.size,0),this.renderable.transform.scale.setd(-n,n,n),this.renderable.transform.update(),this.renderer.render(this.renderable,g.camera,[],this.textures[0],!1))},E.prototype.getTerrainData=function(){var e=new Uint8Array(this.size*this.size*4);this.extractFloatPass.render(this.renderer,this.texturesBounce[0],this.textures[0]),this.renderer.readPixels(0,0,this.size,this.size,e);var t=new Float32Array(e.buffer),n=new Uint8Array(this.size*this.size*4);this.normalmapPass.render(this.renderer,this.normalMap,this.textures[0]),this.renderer.readPixels(0,0,this.size,this.size,n);var r=new Uint8Array(this.size*this.size*4*4);return this.copyPass.render(this.renderer,this.splatCopy,this.splat),this.renderer.readPixels(0,0,this.size*this.splatMult,this.size*this.splatMult,r),{heights:t,normals:n,splat:r}},E.prototype.updateAmmoBody=function(){var e=this.getTerrainData().heights,t=this.heightBuffer;for(var n=0;n<this.size;n++)for(var r=0;r<this.size;r++)w.setValue(t+(n*this.size+r)*4,e[(this.size-n-1)*this.size+r],"float")},E.prototype.setLightmapTexture=function(e){for(var t=0;t<this.clipmaps.length;t++){var n=this.clipmaps[t];n.clipmapEntity.traverse(function(t){if(t.meshRendererComponent){var n=t.meshRendererComponent.materials[0];e?(n.setTexture("LIGHT_MAP",e),n.shader.defines.LIGHTMAP=!0):n.shader.defines.LIGHTMAP=!1}})}},E.prototype.initAmmoBody=function(){var e=this.heightBuffer=w.allocate(4*this.size*this.size,"float",w.ALLOC_NORMAL);this.updateAmmoBody();var t=1,n=-500,r=500,i=1,s=0,o=!1,u=new w.btHeightfieldTerrainShape(this.size,this.size,e,t,n,r,i,s,o),a=new w.btTransform;a.setIdentity(),a.setOrigin(new w.btVector3(this.size/2,0,this.size/2));var f=new w.btDefaultMotionState(a),l=new w.btVector3(0,0,0),c=0,h=new w.btRigidBodyConstructionInfo(c,f,u,l),p=new w.btRigidBody(h);return p.setFriction(1),this.world.getSystem("AmmoSystem").ammoWorld.addRigidBody(p),p},E.prototype.updateTextures=function(){for(var e=0;e<this.count-1;e++){var t=this.textures[e],n=this.textures[e+1];t.magFilter="Bilinear",t.minFilter="BilinearNoMipMaps",this.copyPass.render(this.renderer,n,t)}var r=this.size;for(var e=0;e<this.count;e++){var i=this.texturesBounce[e],t=this.textures[e],n=this.textures[e+1];this.upsamplePass.material.setTexture("MAIN_MAP",t),this.upsamplePass.material.uniforms.res=[r,r,2/r,2/r],n?(n.magFilter="NearestNeighbor",n.minFilter="NearestNeighborNoMipMaps",this.upsamplePass.render(this.renderer,i,n)):(t.magFilter="NearestNeighbor",t.minFilter="NearestNeighborNoMipMaps",this.upsamplePass.render(this.renderer,i,t)),r*=.5}for(var e=0;e<this.count;e++)this.copyPass.render(this.renderer,this.textures[e],this.texturesBounce[e]);this.normalmapPass.render(this.renderer,this.normalMap,this.textures[0])},E.prototype.update=function(e){var t=e.x,n=e.y,i=e.z;for(var s=0;s<this.clipmaps.length;s++){var o=this.clipmaps[s],u=Math.floor(t*.5/o.size),a=Math.floor(n*.5/o.size),f=Math.floor(i*.5/o.size);if(a!==o.currentY){o.currentY=a;var l=this.gridSize*o.size*2;if(o.clipmapEntity._hidden===!1&&n>l){o.clipmapEntity.hide();if(s<this.clipmaps.length-1){var c=this.clipmaps[s+1];c.clipmapEntity.innermost.meshRendererComponent.hidden=!1,c.clipmapEntity.interior1.meshRendererComponent.hidden=!0,c.clipmapEntity.interior2.meshRendererComponent.hidden=!0}continue}if(o.clipmapEntity._hidden===!0&&n<=l){o.clipmapEntity.show();if(s<this.clipmaps.length-1){var c=this.clipmaps[s+1];c.clipmapEntity.innermost.meshRendererComponent.hidden=!0,c.clipmapEntity.interior1.meshRendererComponent.hidden=!1,c.clipmapEntity.interior2.meshRendererComponent.hidden=!1}}}if(u===o.currentX&&f===o.currentZ)continue;var h=this.n;if(o.parentClipmap){var p=o.parentClipmap.clipmapEntity.interior1,d=o.parentClipmap.clipmapEntity.interior2,v=r.moduloPositive(u+1,2),m=r.moduloPositive(f+1,2),g=v%2===0?-h:h+1,y=m%2===0?-h:h+1;p.setTranslation(-h,0,y),m=r.moduloPositive(f,2),y=m%2===0?-h:-h+1,d.setTranslation(g,0,y)}o.clipmapEntity.setTranslation(u*o.size*2,0,f*o.size*2),o.currentX=u,o.currentZ=f}},E.prototype.createClipmapLevel=function(e,t,n){var r=e.createEntity("clipmap"+n);r.addToWorld();var i=this.n;return this.createQuadEntity(e,t,n,r,-2*i,-2*i,i,i),this.createQuadEntity(e,t,n,r,-1*i,-2*i,i,i),this.createQuadEntity(e,t,n,r,0*i,-2*i,2,i),this.createQuadEntity(e,t,n,r,2,-2*i,i,i),this.createQuadEntity(e,t,n,r,2+1*i,-2*i,i,i),this.createQuadEntity(e,t,n,r,-2*i,-1*i,i,i),this.createQuadEntity(e,t,n,r,2+1*i,-1*i,i,i),this.createQuadEntity(e,t,n,r,-2*i,0,i,2),this.createQuadEntity(e,t,n,r,2+1*i,0,i,2),this.createQuadEntity(e,t,n,r,-2*i,2,i,i),this.createQuadEntity(e,t,n,r,2+1*i,2,i,i),this.createQuadEntity(e,t,n,r,-2*i,2+1*i,i,i),this.createQuadEntity(e,t,n,r,-1*i,2+1*i,i,i),this.createQuadEntity(e,t,n,r,0,2+1*i,2,i),this.createQuadEntity(e,t,n,r,2,2+1*i,i,i),this.createQuadEntity(e,t,n,r,2+1*i,2+1*i,i,i),r.innermost=this.createQuadEntity(e,t,n,r,-i,-i,i*2+2,i*2+2),n!==0&&(r.innermost.meshRendererComponent.hidden=!0,r.interior1=this.createQuadEntity(e,t,n,r,-i,-i,i*2+2,1),r.interior2=this.createQuadEntity(e,t,n,r,-i,-i,1,i*2+1)),r},E.prototype.createQuadEntity=function(e,t,n,r,i,s,o,u){var a=this.createGrid(o,u),f=e.createEntity("mesh_"+o+"_"+u,a,t);return f.meshDataComponent.modelBound.xExtent=o*.5,f.meshDataComponent.modelBound.yExtent=255,f.meshDataComponent.modelBound.zExtent=u*.5,f.meshDataComponent.modelBound.center.setd(o*.5,128,u*.5),f.meshDataComponent.autoCompute=!1,f.meshRendererComponent.isPickable=!1,f.setTranslation(i,0,s),r.attachChild(f),f.addToWorld(),f},E.prototype.createGrid=function(e,t){var n=e+"_"+t;if(this._gridCache[n])return this._gridCache[n];var r=o.defaultMap([o.POSITION]),i=new o(r,(e+1)*(t+1),(e*2+4)*t);this._gridCache[n]=i,i.indexModes=["TriangleStrip"];var s=i.getAttributeBuffer(o.POSITION),u=i.getIndexBuffer();for(var a=0;a<e+1;a++)for(var f=0;f<t+1;f++){var l=f*(e+1)+a;s[l*3+0]=a,s[l*3+1]=0,s[l*3+2]=f}var c=0,l=0;for(var f=0;f<t;f++){u[c++]=f*(e+1),u[c++]=f*(e+1);for(var a=0;a<e;a++)l=f*(e+1)+a,u[c++]=l+e+1,u[c++]=l+1;u[c++]=l+e+1+1,u[c++]=l+e+1+1}return console.log((e+1)*(t+1),(e*2+4)*t,e*t*6),i};var S={defines:{SKIP_SPECULAR:!0},processors:[f.light.processor,function(e){f.USE_FOG?(e.defines.FOG=!0,e.uniforms.fogSettings=f.FOG_SETTINGS,e.uniforms.fogColor=f.FOG_COLOR):delete e.defines.FOG}],attributes:{vertexPosition:o.POSITION},uniforms:{viewProjectionMatrix:a.VIEW_PROJECTION_MATRIX,worldMatrix:a.WORLD_MATRIX,cameraPosition:a.CAMERA,heightMap:"HEIGHT_MAP",normalMap:"NORMAL_MAP",detailMap:"DETAIL_MAP",splatMap:"SPLAT_MAP",groundMap1:"GROUND_MAP1",groundMap2:"GROUND_MAP2",groundMap3:"GROUND_MAP3",groundMap4:"GROUND_MAP4",groundMap5:"GROUND_MAP5",stoneMap:"STONE_MAP",lightMap:"LIGHT_MAP",fogSettings:function(){return f.FOG_SETTINGS},fogColor:function(){return f.FOG_COLOR},resolution:[255,1,1024,1024],resolutionNorm:[1024,1024],col:[0,0,0]},builder:function(e,t){f.light.builder(e,t)},vshader:function(){return["attribute vec3 vertexPosition;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","uniform vec3 cameraPosition;","uniform sampler2D heightMap;","uniform vec4 resolution;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec4 alphaval;",f.light.prevertex,"const vec2 alphaOffset = vec2(45.0);","const vec2 oneOverWidth = vec2(1.0 / 16.0);","void main(void) {","vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","vec2 coord = (worldPos.xz + vec2(0.5, 0.5)) / resolution.zw;","vec4 heightCol = texture2D(heightMap, coord);","float zf = heightCol.r;","float zd = heightCol.g;","vec2 alpha = clamp((abs(worldPos.xz - cameraPosition.xz) * resolution.y - alphaOffset) * oneOverWidth, vec2(0.0), vec2(1.0));","alpha.x = max(alpha.x, alpha.y);","float z = mix(zf, zd, alpha.x);","z = coord.x <= 0.0 || coord.x >= 1.0 || coord.y <= 0.0 || coord.y >= 1.0 ? -2000.0 : z;","alphaval = vec4(zf, zd, alpha.x, z);","worldPos.y = z * resolution.x;","gl_Position = viewProjectionMatrix * worldPos;","vWorldPos = worldPos.xyz;","viewPosition = cameraPosition - vWorldPos;",f.light.vertex,"}"].join("\n")},fshader:function(){return["uniform vec3 col;","uniform sampler2D normalMap;","uniform sampler2D splatMap;","uniform sampler2D detailMap;","uniform sampler2D groundMap1;","uniform sampler2D groundMap2;","uniform sampler2D groundMap3;","uniform sampler2D groundMap4;","uniform sampler2D groundMap5;","uniform sampler2D stoneMap;","uniform sampler2D lightMap;","uniform vec2 fogSettings;","uniform vec3 fogColor;","uniform vec2 resolutionNorm;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec4 alphaval;",f.light.prefragment,"void main(void) {","if (alphaval.w < -1000.0) discard;","vec2 mapcoord = vWorldPos.xz / resolutionNorm;","vec2 coord = mapcoord * 96.0;","vec4 final_color = vec4(1.0);","vec3 N = (texture2D(normalMap, mapcoord).xyz * vec3(2.0) - vec3(1.0)).xzy;","N.y = 0.1;","N = normalize(N);","vec4 splat = texture2D(splatMap, mapcoord);","vec4 g1 = texture2D(groundMap1, coord);","vec4 g2 = texture2D(groundMap2, coord);","vec4 g3 = texture2D(groundMap3, coord);","vec4 g4 = texture2D(groundMap4, coord);","vec4 g5 = texture2D(groundMap5, coord);","vec4 stone = texture2D(stoneMap, coord);","final_color = mix(g1, g2, splat.r);","final_color = mix(final_color, g3, splat.g);","final_color = mix(final_color, g4, splat.b);","final_color = mix(final_color, g5, splat.a);","float slope = clamp(1.0 - dot(N, vec3(0.0, 1.0, 0.0)), 0.0, 1.0);","slope = smoothstep(0.15, 0.25, slope);","final_color = mix(final_color, stone, slope);","#ifdef FOG","float d = pow(smoothstep(fogSettings.x, fogSettings.y, length(viewPosition)), 1.0);","final_color.rgb = mix(final_color.rgb, fogColor, d);","#endif","#ifdef LIGHTMAP","final_color = final_color * texture2D(lightMap, mapcoord);","#else",f.light.fragment,"#endif","gl_FragColor = final_color;","}"].join("\n")}},x={attributes:{vertexPosition:o.POSITION,vertexUV0:o.TEXCOORD0},uniforms:{diffuseMap:"MAIN_MAP",childMap:a.DIFFUSE_MAP,res:[1,1,1,1]},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","varying vec2 texCoord0;","void main(void) {","	texCoord0 = vertexUV0;","	gl_Position = vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D childMap;","uniform vec4 res;","varying vec2 texCoord0;","void main(void)","{","	gl_FragColor = texture2D(diffuseMap, texCoord0);","	vec2 coordMod = mod(floor(texCoord0 * res.xy), 2.0);","	bvec2 test = equal(coordMod, vec2(0.0));","	if (all(test)) {","		gl_FragColor.g = texture2D(childMap, texCoord0).r;","	} else if (test.x) {","		gl_FragColor.g = (texture2D(childMap, texCoord0).r + texture2D(childMap, texCoord0 + vec2(0.0, res.w)).r) * 0.5;","	} else if (test.y) {","		gl_FragColor.g = (texture2D(childMap, texCoord0).r + texture2D(childMap, texCoord0 + vec2(res.z, 0.0)).r) * 0.5;","	} else {","		gl_FragColor.g = (texture2D(childMap, texCoord0).r + texture2D(childMap, texCoord0 + vec2(res.z, res.w)).r) * 0.5;","	}","	gl_FragColor.ba = vec2(0.0);","}"].join("\n")},T={attributes:{vertexPosition:o.POSITION,vertexUV0:o.TEXCOORD0},uniforms:{viewProjectionMatrix:a.VIEW_PROJECTION_MATRIX,worldMatrix:a.WORLD_MATRIX,opacity:1,diffuseMap:a.DIFFUSE_MAP},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","void main(void) {","	texCoord0 = vertexUV0;","	gl_Position = viewProjectionMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform float opacity;","varying vec2 texCoord0;","void main(void)","{","	gl_FragColor = texture2D(diffuseMap, texCoord0);","	gl_FragColor.a *= opacity;","}"].join("\n")},N={attributes:{vertexPosition:o.POSITION,vertexUV0:o.TEXCOORD0},uniforms:{viewProjectionMatrix:a.VIEW_PROJECTION_MATRIX,worldMatrix:a.WORLD_MATRIX,opacity:1,rgba:[1,1,1,1],diffuseMap:a.DIFFUSE_MAP,splatMap:"SPLAT_MAP"},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void) {","	vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","	gl_Position = viewProjectionMatrix * worldPos;","	texCoord0 = vertexUV0;","	texCoord1 = worldPos.xy * 0.5 + 0.5;","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D splatMap;","uniform vec4 rgba;","uniform float opacity;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void)","{","	vec4 splat = texture2D(splatMap, texCoord1);","	vec4 brush = texture2D(diffuseMap, texCoord0);","	vec4 final = mix(splat, rgba, opacity * length(brush.rgb) * brush.a);","	gl_FragColor = final;","}"].join("\n")},C={attributes:{vertexPosition:o.POSITION,vertexUV0:o.TEXCOORD0},uniforms:{viewProjectionMatrix:a.VIEW_PROJECTION_MATRIX,worldMatrix:a.WORLD_MATRIX,opacity:1,size:1/512,diffuseMap:a.DIFFUSE_MAP,heightMap:"HEIGHT_MAP"},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void) {","	vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","	gl_Position = viewProjectionMatrix * worldPos;","	texCoord0 = vertexUV0;","	texCoord1 = worldPos.xy * 0.5 + 0.5;","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D heightMap;","uniform float opacity;","uniform float size;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void)","{","	float col1 = texture2D(heightMap, texCoord1 + vec2(-size, -size)).r;","	float col2 = texture2D(heightMap, texCoord1 + vec2(-size, size)).r;","	float col3 = texture2D(heightMap, texCoord1 + vec2(size, size)).r;","	float col4 = texture2D(heightMap, texCoord1 + vec2(size, -size)).r;","	float avg = (col1 + col2 + col3 + col4) * 0.25;","	gl_FragColor = texture2D(heightMap, texCoord1);","	vec4 brush = texture2D(diffuseMap, texCoord0);","	gl_FragColor.r = mix(gl_FragColor.r, avg, brush.r * brush.a * opacity);","}"].join("\n")},k={attributes:{vertexPosition:o.POSITION,vertexUV0:o.TEXCOORD0},uniforms:{viewProjectionMatrix:a.VIEW_PROJECTION_MATRIX,worldMatrix:a.WORLD_MATRIX,opacity:1,height:0,diffuseMap:a.DIFFUSE_MAP,heightMap:"HEIGHT_MAP"},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void) {","	vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","	gl_Position = viewProjectionMatrix * worldPos;","	texCoord0 = vertexUV0;","	texCoord1 = worldPos.xy * 0.5 + 0.5;","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","uniform sampler2D heightMap;","uniform float opacity;","uniform float height;","varying vec2 texCoord0;","varying vec2 texCoord1;","void main(void)","{","	gl_FragColor = texture2D(heightMap, texCoord1);","	vec4 brush = texture2D(diffuseMap, texCoord0);","	gl_FragColor.r = mix(gl_FragColor.r, height, brush.r * brush.a * opacity);","}"].join("\n")},L={attributes:{vertexPosition:o.POSITION,vertexUV0:o.TEXCOORD0},uniforms:{viewProjectionMatrix:a.VIEW_PROJECTION_MATRIX,worldMatrix:a.WORLD_MATRIX,diffuseMap:a.DIFFUSE_MAP},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","varying vec2 texCoord0;","void main(void) {","	texCoord0 = vertexUV0;","	gl_Position = viewProjectionMatrix * worldMatrix * vec4(vertexPosition, 1.0);","}"].join("\n"),fshader:["uniform sampler2D diffuseMap;","varying vec2 texCoord0;","float shift_right (float v, float amt) {","v = floor(v) + 0.5;","return floor(v / exp2(amt));","}","float shift_left (float v, float amt) {","return floor(v * exp2(amt) + 0.5);","}","float mask_last (float v, float bits) {","return mod(v, shift_left(1.0, bits));","}","float extract_bits (float num, float from, float to) {","from = floor(from + 0.5); to = floor(to + 0.5);","return mask_last(shift_right(num, from), to - from);","}","vec4 encode_float (float val) {","if (val == 0.0) return vec4(0, 0, 0, 0);","float sign = val > 0.0 ? 0.0 : 1.0;","val = abs(val);","float exponent = floor(log2(val));","float biased_exponent = exponent + 127.0;","float fraction = ((val / exp2(exponent)) - 1.0) * 8388608.0;","float t = biased_exponent / 2.0;","float last_bit_of_biased_exponent = fract(t) * 2.0;","float remaining_bits_of_biased_exponent = floor(t);","float byte4 = extract_bits(fraction, 0.0, 8.0) / 255.0;","float byte3 = extract_bits(fraction, 8.0, 16.0) / 255.0;","float byte2 = (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;","float byte1 = (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0;","return vec4(byte4, byte3, byte2, byte1);","}","void main(void)","{","	gl_FragColor = encode_float(texture2D(diffuseMap, vec2(texCoord0.x, 1.0 - texCoord0.y)).r);","}"].join("\n")},A={attributes:{vertexPosition:o.POSITION},uniforms:{viewMatrix:a.VIEW_MATRIX,projectionMatrix:a.PROJECTION_MATRIX,worldMatrix:a.WORLD_MATRIX,cameraFar:a.FAR_PLANE,cameraPosition:a.CAMERA,heightMap:"HEIGHT_MAP",resolution:[255,1,1,1],id:function(e){return e.renderable.id+1}},vshader:["attribute vec3 vertexPosition;","uniform sampler2D heightMap;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","uniform float cameraFar;","uniform vec4 resolution;","uniform vec3 cameraPosition;","varying float depth;","const vec2 alphaOffset = vec2(45.0);","const vec2 oneOverWidth = vec2(1.0 / 16.0);","void main(void) {","vec4 worldPos = worldMatrix * vec4(vertexPosition, 1.0);","vec2 coord = (worldPos.xz + vec2(0.5, 0.5)) / resolution.zw;","vec4 heightCol = texture2D(heightMap, coord);","float zf = heightCol.r;","float zd = heightCol.g;","vec2 alpha = clamp((abs(worldPos.xz - cameraPosition.xz) * resolution.y - alphaOffset) * oneOverWidth, vec2(0.0), vec2(1.0));","alpha.x = max(alpha.x, alpha.y);","float z = mix(zf, zd, alpha.x);","worldPos.y = z * resolution.x;","vec4 mvPosition = viewMatrix * worldPos;","depth = -mvPosition.z / cameraFar;","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fshader:["uniform float id;","varying float depth;",c.methods.packDepth16,"void main() {","vec2 packedId = vec2(floor(id/255.0), mod(id, 255.0)) * vec2(1.0/255.0);","vec2 packedDepth = packDepth16(depth);","gl_FragColor = vec4(packedId, packedDepth);","}"].join("\n")},O={attributes:{vertexPosition:o.POSITION,vertexUV0:o.TEXCOORD0},uniforms:{viewMatrix:a.VIEW_MATRIX,projectionMatrix:a.PROJECTION_MATRIX,worldMatrix:a.WORLD_MATRIX,heightMap:a.DIFFUSE_MAP,resolution:[512,512],height:.05},vshader:["attribute vec3 vertexPosition;","attribute vec2 vertexUV0;","uniform mat4 viewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 worldMatrix;","varying vec2 vUv;","void main() {","vUv = vertexUV0;","gl_Position = projectionMatrix * viewMatrix * worldMatrix * vec4( vertexPosition, 1.0 );","}"].join("\n"),fshader:["uniform float height;","uniform vec2 resolution;","uniform sampler2D heightMap;","varying vec2 vUv;","void main() {","float val = texture2D(heightMap, vUv).x;","float valU = texture2D(heightMap, vUv + vec2(1.0 / resolution.x, 0.0)).x;","float valV = texture2D(heightMap, vUv + vec2(0.0, 1.0 / resolution.y)).x;","vec3 normal = vec3(val - valU, val - valV, height);","gl_FragColor = vec4((0.5 * normalize(normal) + 0.5), 1.0);","}"].join("\n")};return E}),define("goo/addons/terrainpack/Vegetation",["goo/entities/components/MeshDataComponent","goo/renderer/Material","goo/renderer/Camera","goo/math/MathUtils","goo/math/Vector3","goo/math/Transform","goo/renderer/TextureCreator","goo/renderer/Texture","goo/renderer/MeshData","goo/renderer/Shader","goo/renderer/light/DirectionalLight","goo/util/CanvasUtils","goo/util/Ajax","goo/util/MeshBuilder","goo/noise/Noise","goo/noise/ValueNoise","goo/addons/terrainpack/TerrainSurface","goo/shapes/Quad","goo/renderer/shaders/ShaderBuilder"],function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v,m,g,y){function b(){this.calcVec=new i,this.initDone=!1}b.prototype.init=function(n,r,i,s,o){this.world=n,this.terrainQuery=r,this.vegetationList={};for(var u in s){var a=s[u],f=this.createBase(a);this.vegetationList[u]=f}var l=new t(T,"vegetation");l.setTexture("DIFFUSE_MAP",i),l.cullState.enabled=!1,l.uniforms.discardThreshold=.2,l.blendState.blending="CustomBlending",l.uniforms.materialAmbient=[0,0,0,0],l.uniforms.materialDiffuse=[1,1,1,1],l.uniforms.materialSpecular=[0,0,0,0],l.renderQueue=3001,this.material=l,this.patchSize=15,this.patchDensity=19,this.gridSize=7,o&&(this.patchSize=o.patchSize||this.patchSize,this.patchDensity=o.patchDensity||this.patchDensity,this.gridSize=o.gridSize||this.gridSize),this.patchSpacing=this.patchSize/this.patchDensity,this.gridSizeHalf=Math.floor(this.gridSize*.5),this.grid=[];var c=this.createPatch(0,0);for(var h=0;h<this.gridSize;h++){this.grid[h]=[];for(var p=0;p<this.gridSize;p++){var d=this.world.createEntity(this.material),v=new e(c);v.modelBound.xExtent=this.patchSize,v.modelBound.yExtent=500,v.modelBound.zExtent=this.patchSize,v.autoCompute=!1,d.set(v),d.addToWorld(),this.grid[h][p]=d,d.meshRendererComponent.cullMode="Never",d.meshRendererComponent.hidden=!0}}l.uniforms.fadeDistMax=this.gridSizeHalf*this.patchSize,l.uniforms.fadeDistMin=.7*l.uniforms.fadeDistMax,this.currentX=-1e4,this.currentZ=-1e4,this.initDone=!0},b.prototype.rebuild=function(){this.currentX=-1e4,this.currentZ=-1e4};var w=!1;b.prototype.toggle=function(){w=!w;for(var e=0;e<this.gridSize;e++)for(var t=0;t<this.gridSize;t++){var n=this.grid[e][t];n.skip=w}w||this.rebuild()},b.prototype.update=function(e,t){if(!this.initDone||w)return;var n=Math.floor(e/this.patchSize),i=Math.floor(t/this.patchSize);if(this.currentX===n&&this.currentZ===i)return;for(var e=0;e<this.gridSize;e++)for(var t=0;t<this.gridSize;t++){var s=n+e,o=i+t,u=s-this.currentX,a=o-this.currentZ;if(u>=0&&u<this.gridSize&&a>=0&&a<this.gridSize)continue;s-=this.gridSizeHalf,o-=this.gridSizeHalf;var f=r.moduloPositive(s,this.gridSize),l=r.moduloPositive(o,this.gridSize);s*=this.patchSize,o*=this.patchSize;var c=this.grid[f][l],h=this.createPatch(s,o);h?(c.meshRendererComponent.hidden=!1,c.meshDataComponent.meshData=h,c.meshRendererComponent.worldBound.center.setd(s+this.patchSize*.5,0,o+this.patchSize*.5)):c.meshRendererComponent.hidden=!0}this.currentX=n,this.currentZ=i},b.prototype.createPatch=function(e,t){var n=new p,r=new s,o=this.patchDensity,u=this.patchSpacing,f=[0,10,0];for(var l=0;l<o;l++)for(var c=0;c<o;c++){var h=e+(l+Math.random()*.5)*u,d=t+(c+Math.random()*.5)*u;f[0]=h,f[2]=d+.5;var v=this.terrainQuery.getHeightAt(f),m=this.terrainQuery.getNormalAt(f);v===null&&(v=0),m===null&&(m=i.UNIT_Y);var g=m.dot(i.UNIT_Y),y=this.terrainQuery.getVegetationType(h,d,g);if(!y)continue;var b=Math.random()*.4+.8;r.scale.setd(b,b,b),r.translation.setd(0,0,0);var w=Math.random()*Math.PI*2,E=Math.sin(w),S=Math.cos(w);this.calcVec.setd(E,0,S),this.lookAt(r.rotation,this.calcVec,m),r.translation.setd(h,v,d),r.update();var x=this.vegetationList[y];n.addMeshData(x,r)}var T=n.build();for(var N=0;N<T.length;N++){var x=T[N],C=x.getAttributeBuffer(a.POSITION),k=x.getAttributeBuffer(a.COLOR);for(var N=0,L=0;N<C.length;N+=3,L+=4){var A=this.terrainQuery.getLightAt([C[N],C[N+1],C[N+2]]);k[L]=A,k[L+1]=A,k[L+2]=A,k[L+3]=1}}return T[0]};var E=new i,S=new i,x=new i;b.prototype.lookAt=function(e,t,n){var r=E,i=S,s=x;i.setv(n).normalize(),r.setv(n).cross(t).normalize(),s.setv(i).cross(r);var o=e.data;return o[0]=r.data[0],o[1]=r.data[1],o[2]=r.data[2],o[3]=i.data[0],o[4]=i.data[1],o[5]=i.data[2],o[6]=s.data[0],o[7]=s.data[1],o[8]=s.data[2],this},b.prototype.createBase=function(e){var t=new g(e.w,e.h,10,10);t.attributeMap.BASE=a.createAttribute(1,"Float"),t.attributeMap.COLOR=a.createAttribute(4,"Float"),t.rebuildData(t.vertexCount,t.indexCount,!0),t.getAttributeBuffer(a.NORMAL).set([0,1,0,0,1,0,0,1,0,0,1,0]),t.getAttributeBuffer(a.TEXCOORD0).set([e.tx,e.ty,e.tx,e.ty+e.th,e.tx+e.tw,e.ty+e.th,e.tx+e.tw,e.ty]),t.getAttributeBuffer("BASE").set([0,e.h,e.h,0]),t.getAttributeBuffer(a.COLOR).set([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]);var n=new p,r=new s;r.translation.y=e.h*.5-e.h*.1,r.translation.z=-e.w*.1,r.update(),n.addMeshData(t,r),r.setRotationXYZ(0,Math.PI*.3,0),r.translation.x=e.w*.1,r.translation.z=e.w*.1,r.update(),n.addMeshData(t,r),r.setRotationXYZ(0,-Math.PI*.3,0),r.translation.x=-e.w*.1,r.translation.z=e.w*.1,r.update(),n.addMeshData(t,r);var i=n.build();return i[0]};var T={processors:[y.light.processor,function(e){y.USE_FOG?(e.defines.FOG=!0,e.uniforms.fogSettings=y.FOG_SETTINGS,e.uniforms.fogColor=y.FOG_COLOR):delete e.defines.FOG}],attributes:{vertexPosition:a.POSITION,vertexNormal:a.NORMAL,vertexUV0:a.TEXCOORD0,vertexColor:a.COLOR,base:"BASE"},uniforms:{viewProjectionMatrix:f.VIEW_PROJECTION_MATRIX,worldMatrix:f.WORLD_MATRIX,cameraPosition:f.CAMERA,diffuseMap:f.DIFFUSE_MAP,discardThreshold:-0.01,fogSettings:function(){return y.FOG_SETTINGS},fogColor:function(){return y.FOG_COLOR},time:f.TIME,fadeDistMin:40,fadeDistMax:50},builder:function(e,t){y.light.builder(e,t)},vshader:function(){return["attribute vec3 vertexPosition;","attribute vec3 vertexNormal;","attribute vec2 vertexUV0;","attribute vec4 vertexColor;","attribute float base;","uniform mat4 viewProjectionMatrix;","uniform mat4 worldMatrix;","uniform vec3 cameraPosition;","uniform float time;","uniform float fadeDistMin;","uniform float fadeDistMax;",y.light.prevertex,"varying vec3 normal;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec2 texCoord0;","varying vec4 color;","varying float dist;","void main(void) {","vec3 swayPos = vertexPosition;","swayPos.x += sin(time * 1.0 + swayPos.x * 0.5) * base * sin(time * 1.8 + swayPos.y * 0.6) * 0.1 + 0.08;","vec4 worldPos = worldMatrix * vec4(swayPos, 1.0);","vWorldPos = worldPos.xyz;","gl_Position = viewProjectionMatrix * worldPos;",y.light.vertex,"normal = (worldMatrix * vec4(vertexNormal, 0.0)).xyz;","texCoord0 = vertexUV0;","color = vertexColor;","viewPosition = cameraPosition - worldPos.xyz;","dist = 1.0 - smoothstep(fadeDistMin, fadeDistMax, length(viewPosition.xz));","}"].join("\n")},fshader:function(){return["uniform sampler2D diffuseMap;","uniform float discardThreshold;","uniform vec2 fogSettings;","uniform vec3 fogColor;",y.light.prefragment,"varying vec3 normal;","varying vec3 vWorldPos;","varying vec3 viewPosition;","varying vec2 texCoord0;","varying float dist;","varying vec4 color;","void main(void)","{","vec4 final_color = texture2D(diffuseMap, texCoord0) * color;","if (final_color.a < discardThreshold) discard;","final_color.a = min(final_color.a, dist);","if (final_color.a <= 0.0) discard;","vec3 N = normalize(normal);",y.light.fragment,"final_color.a = pow(final_color.a, 0.5);","#ifdef FOG","float d = pow(smoothstep(fogSettings.x, fogSettings.y, length(viewPosition)), 1.0);","final_color.rgb = mix(final_color.rgb, fogColor, d);","#endif","gl_FragColor = final_color;","}"].join("\n")}};return b}),define("goo/addons/terrainpack/TerrainHandler",["goo/addons/terrainpack/Terrain","goo/addons/terrainpack/Vegetation","goo/addons/terrainpack/Forrest","goo/math/Vector3","goo/util/Ajax","goo/math/Transform","goo/math/MathUtils","goo/renderer/Texture","goo/renderer/TextureCreator","goo/util/rsvp"],function(e,t,n,r,i,s,o,u,a,f){function l(i,s,o,u){this.goo=i,this.terrainSize=s,this.resourceFolder=u,this.terrain=new e(i,this.terrainSize,o),this.vegetation=new t,this.forrest=new n,this.hidden=!1,this.store=new r,this.settings=null,this.pick=!0,this.draw=!1,this.eventX=0,this.eventY=0,this.vegetationSettings={gridSize:7}}l.prototype.isEditing=function(){return!this.hidden},l.prototype.getHeightAt=function(e){return this.terrainQuery?this.terrainQuery.getHeightAt(e):0};var c=!1,h=!1,p=function(e){e.button===0&&(this.eventX=e.clientX,this.eventY=e.clientY,c=!0,h=e.altKey,this.pick=!0,this.draw=!0,console.log("mousedown"))},d=function(e){e.button===0&&(c=!1,this.draw=!1,console.log("mouseup"))},v=function(e){this.eventX=e.clientX,this.eventY=e.clientY,this.pick=!0,c&&(h=e.altKey,this.draw=!0)};return l.prototype.toggleEditMode=function(){this.terrain.toggleMarker(),this.hidden=!this.hidden,this.hidden?(this.goo.renderer.domElement.addEventListener("mousedown",p.bind(this),!1),this.goo.renderer.domElement.addEventListener("mouseup",d.bind(this),!1),this.goo.renderer.domElement.addEventListener("mouseout",d.bind(this),!1),this.goo.renderer.domElement.addEventListener("mousemove",v.bind(this),!1)):(this.goo.renderer.domElement.removeEventListener("mousedown",p),this.goo.renderer.domElement.removeEventListener("mouseup",d),this.goo.renderer.domElement.removeEventListener("mouseout",d),this.goo.renderer.domElement.removeEventListener("mousemove",v),this.terrainInfo=this.terrain.getTerrainData(),this.draw=!1,c=!1),this.forrest.toggle(),this.vegetation.toggle()},l.prototype.initLevel=function(e,t,n){this.settings=t;var r=this.terrainSize,i=this._loadData(e.heightMap),s=this._loadData(e.splatMap);return f.all([i,s]).then(function(t){var i=t[0],s=t[1],o;i?o=new Float32Array(i):o=new Float32Array(r*r);var u;return s?u=new Uint8Array(s):u=new Uint8Array(r*r*4*4),this._load(e,o,u,n)}.bind(this))},l.prototype._loadData=function(e){var t=new f.Promise,n=new i;return n.get({url:this.resourceFolder+e,responseType:"arraybuffer"}).then(function(e){t.resolve(e.response)}.bind(this),function(){t.resolve(null)}.bind(this)),t},l.prototype._textureLoad=function(e){var t=new f.Promise;return(new a).loadTexture2D(e,{anisotropy:4},function(e){t.resolve(e)}),t},l.prototype._load=function(e,t,n,i){var s=[];return s.push(this._textureLoad(this.resourceFolder+e.ground1.texture)),s.push(this._textureLoad(this.resourceFolder+e.ground2.texture)),s.push(this._textureLoad(this.resourceFolder+e.ground3.texture)),s.push(this._textureLoad(this.resourceFolder+e.ground4.texture)),s.push(this._textureLoad(this.resourceFolder+e.ground5.texture)),s.push(this._textureLoad(this.resourceFolder+e.stone.texture)),f.all(s).then(function(s){this.terrain.init({heightMap:t,splatMap:n,ground1:s[0],ground2:s[1],ground3:s[2],ground4:s[3],ground5:s[4],stone:s[5]}),this.terrainInfo=this.terrain.getTerrainData();var u=this.terrainSize,l=new r,c=this.terrainQuery={getHeightAt:function(e){if(e[0]<0||e[0]>u-1||e[2]<0||e[2]>u-1)return-1e3;var t=e[0],n=u-e[2],r=Math.floor(t),i=Math.floor(n),s=t-r,a=n-i,f=r+1,l=i+1;r=o.moduloPositive(r,u),i=o.moduloPositive(i,u),f=o.moduloPositive(f,u),l=o.moduloPositive(l,u);var c=this.terrainInfo.heights[i*u+r],h=this.terrainInfo.heights[i*u+f],p=this.terrainInfo.heights[l*u+r],d=this.terrainInfo.heights[l*u+f];return o.lerp(a,o.lerp(s,c,h),o.lerp(s,p,d))}.bind(this),getNormalAt:function(e){var t=e[0],n=u-e[2],r=Math.floor(t),i=Math.floor(n),s=r+1,a=i+1;r=o.moduloPositive(r,u),i=o.moduloPositive(i,u),s=o.moduloPositive(s,u),a=o.moduloPositive(a,u);var f=this.terrainInfo.heights[i*u+r],c=this.terrainInfo.heights[i*u+s],h=this.terrainInfo.heights[a*u+r];return l.setd(f-c,1,h-f).normalize()}.bind(this),getVegetationType:function(t,n,r){var i=Math.random();if(o.smoothstep(.82,.91,r)<i)return null;if(this.terrainInfo){t=Math.floor(t),n=Math.floor(n);if(t<0||t>u-1||n<0||n>u-1)return null;t*=this.terrain.splatMult,n*=this.terrain.splatMult;var s=(n*u*this.terrain.splatMult+t)*4,a=this.terrainInfo.splat[s+0]/255,f=this.terrainInfo.splat[s+1]/255,l=this.terrainInfo.splat[s+2]/255,c=this.terrainInfo.splat[s+3]/255,h=a>i?e.ground2:f>i?e.ground3:l>i?e.ground4:c>i?e.ground5:e.ground1,p=0;for(var d in h.vegetation){p+=h.vegetation[d];if(i<p)return d}return null}return null}.bind(this),getForrestType:function(t,n,r,i){if(o.smoothstep(.8,.88,r)<i)return null;if(this.terrainInfo){t=Math.floor(t),n=Math.floor(n);if(t<0||t>u-1||n<0||n>u-1)return null;t*=this.terrain.splatMult,n*=this.terrain.splatMult;var s=(n*u*this.terrain.splatMult+t)*4,a=this.terrainInfo.splat[s+0]/255,f=this.terrainInfo.splat[s+1]/255,l=this.terrainInfo.splat[s+2]/255,c=this.terrainInfo.splat[s+3]/255,h=a>i?e.ground2:f>i?e.ground3:l>i?e.ground4:c>i?e.ground5:e.ground1,p=0;for(var d in h.forrest){p+=h.forrest[d];if(i<p)return d}return null}return null}.bind(this),getLightAt:function(e){if(e[0]<0||e[0]>u-1||e[2]<0||e[2]>u-1)return-1e3;if(!this.lightMapData||!this.lightMapSize)return 1;var t=e[0]*this.lightMapSize/u,n=(u-e[2])*this.lightMapSize/u,r=Math.floor(t),i=Math.floor(n),s=t-r,a=n-i,f=r+1,l=i+1;r=o.moduloPositive(r,this.lightMapSize),i=o.moduloPositive(i,this.lightMapSize),f=o.moduloPositive(f,this.lightMapSize),l=o.moduloPositive(l,this.lightMapSize);var c=this.lightMapData[i*this.lightMapSize+r],h=this.lightMapData[i*this.lightMapSize+f],p=this.lightMapData[l*this.lightMapSize+r],d=this.lightMapData[l*this.lightMapSize+f];return o.lerp(a,o.lerp(s,c,h),o.lerp(s,p,d))/255}.bind(this),getType:function(t,n,r,i){if(o.smoothstep(.8,.88,r)<i)return e.stone;if(this.terrainInfo){t=Math.floor(t),n=Math.floor(n);if(t<0||t>u-1||n<0||n>u-1)return e.stone;t*=this.terrain.splatMult,n*=this.terrain.splatMult;var s=(n*u*this.terrain.splatMult+t)*4,a=this.terrainInfo.splat[s+0]/255,f=this.terrainInfo.splat[s+1]/255,l=this.terrainInfo.splat[s+2]/255,c=this.terrainInfo.splat[s+3]/255,h=a>i?e.ground2:f>i?e.ground3:l>i?e.ground4:c>i?e.ground5:e.ground1;return h}return e.stone}.bind(this)},h=new f.Promise,p=3,d=function(){--p||h.resolve()},v=(new a).loadTexture2D(this.resourceFolder+e.vegetationAtlas,{},d);v.anisotropy=4;var m=e.vegetationTypes,g=(new a).loadTexture2D(this.resourceFolder+e.forrestAtlas,{},d);g.anisotropy=4;var y=(new a).loadTexture2D(this.resourceFolder+e.forrestAtlasNormals,{},d),b=e.forrestTypes;return this.vegetation.init(this.goo.world,c,v,m,this.vegetationSettings),this.forrest.init(this.goo.world,c,g,y,b,i),h}.bind(this))},l.prototype.updatePhysics=function(){this.terrain.updateAmmoBody()},l.prototype.initPhysics=function(){this.ammoBody=this.terrain.initAmmoBody()},l.prototype.useLightmap=function(e,t){if(e){var n=new u(e,{magFilter:"Bilinear",minFilter:"NearestNeighborNoMipMaps",wrapS:"EdgeClamp",wrapT:"EdgeClamp",generateMipmaps:!1,format:"Luminance",type:"UnsignedByte"},t,t);this.lightMapData=e,this.lightMapSize=t,this.terrain.setLightmapTexture(n)}else delete this.lightMapData,delete this.lightMapSize,this.terrain.setLightmapTexture()},l.prototype.update=function(e){var t=e.cameraComponent.camera.translation;if(this.terrain){var n=this.settings;this.hidden&&this.pick&&(this.terrain.pick(e.cameraComponent.camera,this.eventX,this.eventY,this.store),this.terrain.setMarker("add",n.size,this.store.x,this.store.z,n.power,n.brushTexture),this.pick=!1);if(this.hidden&&this.draw){var r="add";h&&(r="sub");var i=[0,0,0,0];n.rgba==="ground2"?i=[1,0,0,0]:n.rgba==="ground3"?i=[0,1,0,0]:n.rgba==="ground4"?i=[0,0,1,0]:n.rgba==="ground5"&&(i=[0,0,0,1]),this.terrain.draw(n.mode,r,n.size,this.store.x,this.store.y,this.store.z,n.power*this.goo.world.tpf*60/100,n.brushTexture,i),this.terrain.updateTextures()}this.terrain.update(t)}this.vegetation&&this.vegetation.update(t.x,t.z),this.forrest&&this.forrest.update(t.x,t.z)},l}),define("goo/addons/terrainpack/TerrainRegister",["goo/scripts/Scripts","goo/addons/terrainpack/Forrest","goo/addons/terrainpack/Terrain","goo/addons/terrainpack/TerrainHandler","goo/addons/terrainpack/Vegetation"],function(e){var t=["goo/scripts/Scripts","goo/addons/terrainpack/Forrest","goo/addons/terrainpack/Terrain","goo/addons/terrainpack/TerrainHandler","goo/addons/terrainpack/Vegetation"];for(var n=1;n<t.length;n++){var r=t[n].slice(t[n].lastIndexOf("/")+1);e.addClass(r,arguments[n])}}),require(["goo/addons/terrainpack/Forrest","goo/addons/terrainpack/Terrain","goo/addons/terrainpack/TerrainHandler","goo/addons/terrainpack/TerrainRegister","goo/addons/terrainpack/TerrainSurface","goo/addons/terrainpack/Vegetation"],function(e,t,n,r,i,s){var o=window.goo;if(!o)return;o.Forrest=e,o.Terrain=t,o.TerrainHandler=n,o.TerrainRegister=r,o.TerrainSurface=i,o.Vegetation=s}),define("goo/addons/terrainpack/terrainpack",function(){});
}try{
if(window.localStorage&&window.localStorage.gooPath){
window.require.config({
paths:{goo:localStorage.gooPath}
});
}else f()
}catch(e){f()}
})(window)